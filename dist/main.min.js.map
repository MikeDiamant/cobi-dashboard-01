{"version":3,"sources":["node_modules/browser-pack/_prelude.js","scr/scripts/bkDashboard.ts","scr/scripts/main.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","BkDashboard","stageContainer","stageWidth","stageHeight","this","version","localStorageAvailable","arcX","arcY","acrToBackground","maxSpeed","maxSpeedCeiling","maxSpeedCeilingBufer","averageSpeed","averageSpeedMultiplier","checkSpeedInterval","lastSpeedUpdate","maxCadence","maxCadenceCeiling","maxCadenceCeilingBuffer","averageCadence","averageCadenceMultiplier","averageCadenceInterval","averageCadenceIntervalObject","lastCadenceUpdate","checkCadenceInterval","checkCadenceIntervalObject","speedArcWidth","speedArcInnerRadius","speedArcOuterRadius","cadenceArcInnerRadius","cadenceArcOuterRadius","prototype","initView","stage","Konva","Stage","container","width","height","layer","Layer","mask","Group","speedArcBackground","Arc","x","y","innerRadius","outerRadius","angle","fill","rotation","curSpeedArc","shadowEnabled","shadowBlur","shadowColor","averageSpeedArc","opacity","averageCadenceArc","cadenceArcBackground","curCadenceArc","bottomBar","Shape","sceneFunc","context","curveWidth","curveRadius","beginPath","moveTo","quadraticCurveTo","lineTo","closePath","fillStrokeShape","add","document","getElementById","innerHTML","initAverageSpeedView","setMaxSpeed","getMaxSpeed","updateAverageSpeedView","getAvrSpeed","initAverageCadenceView","_this","setMaxCadence","getMaxCadence","updateAverageCadenceView","getAvrCadence","setInterval","initSpeedCheck","checkSpeedIntervalObject","Date","getTime","updateCurrentSpeedView","initCadenceCheck","updateCurrentCadenceView","speed","round","tween","Tween","node","calculateSpeedBasedRotation","easing","Easings","EaseInOut","duration","play","cadence","setAvrCadence","calculateCadenceBasedRotation","initial","setAvrSpeed","factor","storeItem","value","localStorage","getItem","Math","ceil","key","setItem","__esModule","bkDashboard_1","COBI","init","BkD","window","innerWidth","innerHeight","rideService","subscribe","tourService","cadenceAvailability","console","log"],"mappings":"AAAA,CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCOA,GAAAK,GAAA,WAyDI,QAAAA,GAAYC,EAAgBC,EAAYC,GAvDhCC,KAAAC,QAAkB,QAElBD,KAAAE,uBAAiC,EAMjCF,KAAAG,KAAe,EACfH,KAAAI,KAAe,EACfJ,KAAAK,gBAA0B,EAE1BL,KAAAM,SAAmB,EACnBN,KAAAO,gBAA0B,GAC1BP,KAAAQ,qBAA+B,EAC/BR,KAAAS,aAAuB,EACvBT,KAAAU,uBAAiC,GACjCV,KAAAW,mBAA6B,IAE7BX,KAAAY,gBAA0B,EAM1BZ,KAAAa,WAAqB,EACrBb,KAAAc,kBAA4B,GAC5Bd,KAAAe,wBAAkC,GAClCf,KAAAgB,eAAyB,EACzBhB,KAAAiB,yBAAmC,IACnCjB,KAAAkB,uBAAiC,IACjClB,KAAAmB,6BAA+B,KAC/BnB,KAAAoB,kBAA4B,EAE5BpB,KAAAqB,qBAA+B,IAC/BrB,KAAAsB,2BAA6B,KAuBjCtB,KAAKE,sBAGoB,mBADX,SAGdF,KAAKF,WAAaA,EAClBE,KAAKD,YAAcA,EACnBC,KAAKH,eAAiBA,EAEtBG,KAAKuB,cAAgBvB,KAAKF,WAAa,GACvCE,KAAKwB,oBAAsBxB,KAAKF,WAAa,IAC7CE,KAAKyB,oBAAsBzB,KAAKwB,oBAAsBxB,KAAKuB,cAE3DvB,KAAK0B,sBAAwB1B,KAAKwB,oBAAsB,GACxDxB,KAAK2B,sBAAwB3B,KAAKyB,oBAAsB,GA8dhE,MAxdI7B,GAAAgC,UAAAC,SAAA,WACI7B,KAAK8B,MACD,GAAIC,OAAMC,OAEFC,UAAWjC,KAAKH,eAChBqC,MAAOlC,KAAKF,WACZqC,OAAQnC,KAAKD,cAIzBC,KAAKG,KAAOH,KAAKF,WAAa,EAC9BE,KAAKI,KAAOJ,KAAKD,YAAiC,GAAnBC,KAAKD,YAEpCC,KAAKoC,MAAQ,GAAIL,OAAMM,MAEvBrC,KAAKsC,KACD,GAAIP,OAAMQ,UAadvC,KAAKwC,mBACD,GAAIT,OAAMU,KAEFC,EAAG1C,KAAKG,KACRwC,EAAG3C,KAAKI,KACRwC,YAAa5C,KAAKwB,oBAAsBxB,KAAKK,gBAC7CwC,YAAa7C,KAAKyB,oBAAsBzB,KAAKK,gBAC7CyC,MAAO,IACPC,KAAM,UACNC,SAAU,MAItBhD,KAAKiD,YACD,GAAIlB,OAAMU,KAEFC,EAAG1C,KAAKG,KACRwC,EAAG3C,KAAKI,KACRwC,YAAa5C,KAAKwB,oBAClBqB,YAAa7C,KAAKyB,oBAClBqB,MAAO,IACPC,KAAM,UACNG,eAAe,EACfC,WAAY,GACZC,YAAa,YAIzBpD,KAAKqD,gBACD,GAAItB,OAAMU,KAEFC,EAAG1C,KAAKG,KACRwC,EAAG3C,KAAKI,KACRwC,YAAa5C,KAAKwB,oBAAsBxB,KAAKK,gBAAkB,GAC/DwC,YAAa7C,KAAKyB,oBAAsBzB,KAAKK,gBAC7CyC,MAAO,EACPQ,QAAS,GACTP,KAAM,OACNG,eAAe,EACfC,WAAY,GACZC,YAAa,SAIzBpD,KAAKuD,kBACD,GAAIxB,OAAMU,KAEFC,EAAG1C,KAAKG,KACRwC,EAAG3C,KAAKI,KACRwC,YAAa5C,KAAK0B,sBAAwB1B,KAAKK,gBAC/CwC,YAAa7C,KAAK2B,sBAAwB3B,KAAKK,gBAC/CyC,MAAO,EACPQ,QAAS,GACTP,KAAM,OACNG,eAAe,EACfC,WAAY,GACZC,YAAa,SAIzBpD,KAAKwD,qBACD,GAAIzB,OAAMU,KAEFC,EAAG1C,KAAKG,KACRwC,EAAG3C,KAAKI,KACRwC,YAAa5C,KAAK0B,sBAAwB1B,KAAKK,gBAC/CwC,YAAa7C,KAAK2B,sBAAwB3B,KAAKK,gBAC/CyC,MAAO,IACPC,KAAM,UACNC,SAAU,MAItBhD,KAAKyD,cACD,GAAI1B,OAAMU,KAEFC,EAAG1C,KAAKG,KACRwC,EAAG3C,KAAKI,KACRwC,YAAa5C,KAAK0B,sBAClBmB,YAAa7C,KAAK2B,sBAClBmB,MAAO,IACPC,KAAM,UACNG,eAAe,EACfC,WAAY,GACZC,YAAa,WAIzB,IAAIlB,GAAQlC,KAAKF,WAAa,GAE9BE,MAAK0D,UACD,GAAI3B,OAAM4B,OAEFC,UAAW,SAAUC,GAEjB,GAAI1B,GAAS,GACT2B,EAAa,GACbC,EAAc,EAElBF,GAAQG,YACRH,EAAQI,OAAO,EAAG9B,GAClB0B,EAAQK,iBAAiBJ,EAAaC,EAAa,EAAGD,EAAY,GAClED,EAAQM,OAAOjC,EAAO,GACtB2B,EAAQK,iBAAiBhC,EAAQ6B,EAAa,EAAG7B,EAAQ4B,EAAY3B,GACrE0B,EAAQM,OAAO,EAAGhC,GAClB0B,EAAQO,YACRP,EAAQQ,gBAAgBrE,OAE5B+C,KAAM,OACNL,EAAG,IACHC,EAAG3C,KAAKI,OAIpBJ,KAAKsC,KAAKgC,IAAItE,KAAKwC,oBACnBxC,KAAKsC,KAAKgC,IAAItE,KAAKwD,sBAEnBxD,KAAKsC,KAAKgC,IAAItE,KAAKiD,aACnBjD,KAAKsC,KAAKgC,IAAItE,KAAKqD,iBAEnBrD,KAAKsC,KAAKgC,IAAItE,KAAKyD,eACnBzD,KAAKsC,KAAKgC,IAAItE,KAAKuD,mBAEnBvD,KAAKoC,MAAMkC,IAAItE,KAAKsC,MACpBtC,KAAKoC,MAAMkC,IAAItE,KAAK0D,WAEpB1D,KAAK8B,MAAMwC,IAAItE,KAAKoC,OAEpBmC,SAASC,eAAe,WAAWC,UAAYzE,KAAKC,SAGxDL,EAAAgC,UAAA8C,qBAAA,WACI1E,KAAK2E,YAAY3E,KAAK4E,eACtB5E,KAAK6E,uBAAuB7E,KAAK8E,eAAe,IAGpDlF,EAAAgC,UAAAmD,uBAAA,WAAA,GAAAC,GAAAhF,IACIA,MAAKiF,cAAcjF,KAAKkF,iBACxBlF,KAAKmF,yBAAyBnF,KAAKoF,iBAAiB,GAEV,OAAtCpF,KAAKmB,+BACLnB,KAAKmB,6BACDkE,YAAY,WACRL,EAAKG,yBAAyBH,EAAKI,iBAAiB,IACrDpF,KAAKkB,0BAIpBtB,EAAAgC,UAAA0D,eAAA,WAAA,GAAAN,GAAAhF,IAC0C,QAAlCA,KAAKuF,2BACLvF,KAAKuF,yBACDF,YAAY,YACJ,GAAIG,OAAOC,UAAYT,EAAKpE,gBAC5BoE,EAAKrE,oBACLqE,EAAKU,uBAAuB,IAEjC1F,KAAKW,sBAIpBf,EAAAgC,UAAA+D,iBAAA,WAAA,GAAAX,GAAAhF,IAC4C,QAApCA,KAAKsB,6BACLtB,KAAKsB,2BACD+D,YAAY,YACJ,GAAIG,OAAOC,UAAYT,EAAK5D,kBAC5B4D,EAAK3D,sBACL2D,EAAKY,yBAAyB,IAEnC5F,KAAKqB,wBAOpBzB,EAAAgC,UAAA8D,uBAAA,SAAuBG,GACnB7F,KAAKY,iBAAkB,GAAI4E,OAAOC,UAElCI,EAAQ7F,KAAK8F,MAAMD,GAEnB7F,KAAK2E,YAAYkB,EAEjB,IAAIvC,GAAU,CACA,KAAVuC,IACAvC,EAAU,EAGd,IAAIyC,GACA,GAAIhE,OAAMiE,OAEFC,KAAMjG,KAAKiD,YACXD,SAAUhD,KAAKkG,4BAA4BL,GAC3CM,OAAQpE,MAAMqE,QAAQC,UACtBC,SAAU,GACVhD,QAASA,GAIrByC,GAAMQ,OAENhC,SAASC,eAAe,SAASC,UAC7BoB,EAAQ,MAAQ7F,KAAKS,aAAe,OAAST,KAAKM,SAAW,IAAMN,KAAKO,gBAAkB,KAGlGX,EAAAgC,UAAAgE,yBAAA,SAAyBY,GACrBxG,KAAKoB,mBAAoB,GAAIoE,OAAOC,UAEpCe,EAAUxG,KAAK8F,MAAMU,GAErBxG,KAAKiF,cAAcuB,GACnBxG,KAAKyG,cAAcD,EAEnB,IAAIlD,GAAU,CACE,KAAZkD,IACAlD,EAAU,EAGd,IAAIyC,GACA,GAAIhE,OAAMiE,OAEFC,KAAMjG,KAAKyD,cACXT,SAAUhD,KAAK0G,8BAA8BF,GAC7CL,OAAQpE,MAAMqE,QAAQC,UACtBC,SAAU,GACVhD,QAASA,GAIrByC,GAAMQ,OAENhC,SAASC,eAAe,WAAWC,UAC/B+B,EAAU,MAAQxG,KAAKgB,eAAiB,OAAShB,KAAKa,WAAa,IAAMb,KAAKc,kBAAoB,KAG1GlB,EAAAgC,UAAAiD,uBAAA,SAAuBgB,EAAOc,GAAA,SAAAA,IAAAA,GAAA,GAC1Bd,EAAQ7F,KAAK8F,MAAMD,GAEnB7F,KAAK4G,YAAYf,EAEjB,IAAIS,GAAW,EACXK,MAAY,IACZL,EAAW,EAGf,IAAItD,GAAW,CACD,KAAV6C,IACA7C,EAAWhD,KAAKkG,4BAA4BL,GAAS,IAGzD,IAAIE,GACA,GAAIhE,OAAMiE,OAEFC,KAAMjG,KAAKqD,gBACXL,SAAUA,EACVmD,OAAQpE,MAAMqE,QAAQC,UACtBC,SAAUA,GAItBP,GAAMQ,QAGV3G,EAAAgC,UAAAuD,yBAAA,SAAyBqB,EAASG,GAAA,SAAAA,IAAAA,GAAA,GAC9BH,EAAUxG,KAAK8F,MAAMU,GAErBxG,KAAKyG,cAAcD,EAEnB,IAAIF,GAAW,EACXK,MAAY,IACZL,EAAW,EAGf,IAAItD,GAAW,CACC,KAAZwD,IACAxD,EAAWhD,KAAK0G,8BAA8BF,GAAW,IAG7D,IAAIT,GACA,GAAIhE,OAAMiE,OAEFC,KAAMjG,KAAKuD,kBACXP,SAAUA,EACVmD,OAAQpE,MAAMqE,QAAQC,UACtBC,SAAUA,GAItBP,GAAMQ,QAGV3G,EAAAgC,UAAAsE,4BAAA,SAA4BL,GACxB,GAAIgB,GACA,IAAM7G,KAAKO,gBAAmBsF,CAElC,OAAO,KACUgB,GAGrBjH,EAAAgC,UAAA8E,8BAAA,SAA8BF,GAC1B,GAAIK,GACA,IAAM7G,KAAKc,kBAAqB0F,CAEpC,OAAO,KACUK,GAGrBjH,EAAAgC,UAAAgF,YAAA,SAAYf,GACkB,OAAtB7F,KAAKS,eACLT,KAAKS,aAAeoF,GAGpBA,EAAQ,IACRA,GAGY7F,KAAKS,cACLT,KAAKU,uBAAyB,GAAMmF,GAAS7F,KAAKU,uBAE9DmF,EAAQ7F,KAAK8F,MAAMD,GAEf7F,KAAKS,eAAiBoF,IACtB7F,KAAKS,aAAeoF,EACpB7F,KAAK8G,UAAU,eAAgB9G,KAAKS,iBAKhDb,EAAAgC,UAAA6E,cAAA,SAAcD,GACkB,OAAxBxG,KAAKgB,iBACLhB,KAAKgB,eAAiBwF,GAGtBA,EAAU,IACVA,GAGYxG,KAAKgB,gBACLhB,KAAKiB,yBAA2B,GAAMuF,GAAWxG,KAAKiB,yBAElEuF,EAAUxG,KAAK8F,MAAMU,GAEjBxG,KAAKgB,iBAAmBwF,IACxBxG,KAAKgB,eAAiBwF,EACtBxG,KAAK8G,UAAU,iBAAkB9G,KAAKgB,mBAKlDpB,EAAAgC,UAAAkD,YAAA,WACI,GAAI9E,KAAKE,yBAA0B,EAAM,CACrC,GAAI6G,GAAQC,aAAaC,QAAQ,eAGd,oBADT,KAENjH,KAAKS,aAAesG,GAI5B,MAAO/G,MAAKS,cAGhBb,EAAAgC,UAAAwD,cAAA,WACI,GAAIpF,KAAKE,yBAA0B,EAAM,CACrC,GAAI6G,GAAQC,aAAaC,QAAQ,iBAGd,oBADT,KAENjH,KAAKgB,eAAiB+F,GAI9B,MAAO/G,MAAKgB,gBAGhBpB,EAAAgC,UAAA+C,YAAA,SAAYkB,GACJA,EAAQ7F,KAAKO,kBACbP,KAAKM,SAAWN,KAAK8F,MAAMD,GAC3B7F,KAAKO,gBAAkB2G,KAAKC,KAAKnH,KAAKM,SAAWN,KAAKQ,sBAAwBR,KAAKQ,qBAE/ER,KAAKM,WAAaN,KAAKO,kBACvBP,KAAKO,iBAAmB,GAG5BP,KAAK8G,UAAU,WAAY9G,KAAKM,UAChCN,KAAK8G,UAAU,kBAAmB9G,KAAKO,mBAI/CX,EAAAgC,UAAAgD,YAAA,WACI,GAAI5E,KAAKE,yBAA0B,EAAM,CACrC,GAAI6G,GAAQC,aAAaC,QAAQ,WAGd,oBADT,KAENjH,KAAKM,SAAWyG,OAIpB/G,MAAKM,SAAWN,KAAK8E,aAGzB,OAAO9E,MAAKM,UAGhBV,EAAAgC,UAAAqD,cAAA,SAAcuB,GACNA,EAAUxG,KAAKc,oBACfd,KAAKa,WAAab,KAAK8F,MAAMU,GAC7BxG,KAAKc,kBAAoBoG,KAAKC,KAAKnH,KAAKa,WAAab,KAAKe,yBAA2Bf,KAAKe,wBAEtFf,KAAKa,aAAeb,KAAKc,oBACzBd,KAAKc,mBAAqBd,KAAKe,yBAGnCf,KAAK8G,UAAU,aAAc9G,KAAKa,YAClCb,KAAK8G,UAAU,oBAAqB9G,KAAKc,qBAIjDlB,EAAAgC,UAAAsD,cAAA,WACI,GAAIlF,KAAKE,yBAA0B,EAAM,CACrC,GAAI6G,GAAQC,aAAaC,QAAQ,aAGd,oBADT,KAENjH,KAAKa,WAAakG,OAItB/G,MAAKa,WAAab,KAAKoF,eAG3B,OAAOpF,MAAKa,YAGhBjB,EAAAgC,UAAAkE,MAAA,SAAMiB,GACF,MAAOG,MAAKpB,MAAc,GAARiB,GAAc,IAGpCnH,EAAAgC,UAAAkF,UAAA,SAAUM,EAAKL,GACP/G,KAAKE,yBAA0B,GAC/B8G,aAAaK,QAAQD,EAAKL,IAGtCnH,IAxiBAL,GAAA+H,YAAA,yCCPA,GAAAC,GAAAtI,EAAwB,gBAIxBuI,MAAKC,KAAK,oCAEV,IAAIC,GAAM,GAAIH,GAAA,WAAY,YAAaI,OAAOC,WAAYD,OAAOE,YAEjEH,GAAI7F,WAEJ6F,EAAIhD,uBACJgD,EAAI3C,yBAEJ2C,EAAIpC,iBACJoC,EAAI/B,mBAEJ6B,KAAKM,YAAYjC,MAAMkC,UACnB,SAAUhB,GACNW,EAAIhC,uBAA+B,IAARqB,KAInCS,KAAKQ,YAAYvH,aAAasH,UAC1B,SAAUhB,GACNW,EAAI7C,uBAA+B,IAARkC,KAInCS,KAAKM,YAAYG,oBAAoBF,UACjC,SAAUhB,GACNmB,QAAQC,IAAI,sBAAwBpB,KAI5CS,KAAKM,YAAYtB,QAAQuB,UACrB,SAAUhB,GACNW,EAAI9B,yBAAyBmB;ADpCrC,iCAAiC;AAIjC;;GAEG;AACH;IAsDI;;OAEG;IACH,qBAAY,cAAc,EAAE,UAAU,EAAE,WAAW;QAC/C,yBAAyB;QAxDrB,YAAO,GAAW,OAAO,CAAC;QAE1B,0BAAqB,GAAY,KAAK,CAAC;QAMvC,SAAI,GAAW,CAAC,CAAC;QACjB,SAAI,GAAW,CAAC,CAAC;QACjB,oBAAe,GAAW,CAAC,CAAC;QAE5B,aAAQ,GAAW,CAAC,CAAC;QACrB,oBAAe,GAAW,EAAE,CAAC;QAC7B,yBAAoB,GAAW,CAAC,CAAC;QACjC,iBAAY,GAAW,CAAC,CAAC;QACzB,2BAAsB,GAAW,EAAE,CAAC;QACpC,uBAAkB,GAAW,IAAI,CAAC;QAElC,oBAAe,GAAW,CAAC,CAAC;QAM5B,eAAU,GAAW,CAAC,CAAC;QACvB,sBAAiB,GAAW,EAAE,CAAC;QAC/B,4BAAuB,GAAW,EAAE,CAAC;QACrC,mBAAc,GAAW,CAAC,CAAC;QAC3B,6BAAwB,GAAW,GAAG,CAAC;QACvC,2BAAsB,GAAW,IAAI,CAAC;QACtC,iCAA4B,GAAG,IAAI,CAAC;QACpC,sBAAiB,GAAW,CAAC,CAAC;QAE9B,yBAAoB,GAAW,IAAI,CAAC;QACpC,+BAA0B,GAAG,IAAI,CAAC;QAuBtC,IAAI,CAAC,qBAAqB;YACtB,CACI,OAAM,CACF,OAAO,CAAC,KAAK,WAAW,CAAC,CAAC;QAEtC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QAErC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QAC1C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACjD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC;QAEzE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC3D,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;IAC/D,CAAC;IAED;;OAEG;IACH,8BAAQ,GAAR;QACI,IAAI,CAAC,KAAK;YACN,IAAI,KAAK,CAAC,KAAK,CACX;gBACI,SAAS,EAAE,IAAI,CAAC,cAAc;gBAC9B,KAAK,EAAE,IAAI,CAAC,UAAU;gBACtB,MAAM,EAAE,IAAI,CAAC,WAAW;aAC3B,CACJ,CAAC;QAEN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QAChC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QAEtD,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;QAE/B,IAAI,CAAC,IAAI;YACL,IAAI,KAAK,CAAC,KAAK,CACX,EASC,CACJ,CAAC;QAEN,IAAI,CAAC,kBAAkB;YACnB,IAAI,KAAK,CAAC,GAAG,CACT;gBACI,CAAC,EAAE,IAAI,CAAC,IAAI;gBACZ,CAAC,EAAE,IAAI,CAAC,IAAI;gBACZ,WAAW,EAAE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe;gBAC5D,WAAW,EAAE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe;gBAC5D,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,SAAS;gBACf,QAAQ,EAAE,GAAG;aAChB,CACJ,CAAC;QAEN,IAAI,CAAC,WAAW;YACZ,IAAI,KAAK,CAAC,GAAG,CACT;gBACI,CAAC,EAAE,IAAI,CAAC,IAAI;gBACZ,CAAC,EAAE,IAAI,CAAC,IAAI;gBACZ,WAAW,EAAE,IAAI,CAAC,mBAAmB;gBACrC,WAAW,EAAE,IAAI,CAAC,mBAAmB;gBACrC,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,SAAS;gBACf,aAAa,EAAE,IAAI;gBACnB,UAAU,EAAE,EAAE;gBACd,WAAW,EAAE,SAAS;aACzB,CACJ,CAAC;QAEN,IAAI,CAAC,eAAe;YAChB,IAAI,KAAK,CAAC,GAAG,CACT;gBACI,CAAC,EAAE,IAAI,CAAC,IAAI;gBACZ,CAAC,EAAE,IAAI,CAAC,IAAI;gBACZ,WAAW,EAAE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe,GAAG,EAAE;gBACjE,WAAW,EAAE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe;gBAC5D,KAAK,EAAE,CAAC;gBACR,OAAO,EAAE,GAAG;gBACZ,IAAI,EAAE,MAAM;gBACZ,aAAa,EAAE,IAAI;gBACnB,UAAU,EAAE,EAAE;gBACd,WAAW,EAAE,MAAM;aACtB,CACJ,CAAC;QAEN,IAAI,CAAC,iBAAiB;YAClB,IAAI,KAAK,CAAC,GAAG,CACT;gBACI,CAAC,EAAE,IAAI,CAAC,IAAI;gBACZ,CAAC,EAAE,IAAI,CAAC,IAAI;gBACZ,WAAW,EAAE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,eAAe;gBAC9D,WAAW,EAAE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,eAAe;gBAC9D,KAAK,EAAE,CAAC;gBACR,OAAO,EAAE,GAAG;gBACZ,IAAI,EAAE,MAAM;gBACZ,aAAa,EAAE,IAAI;gBACnB,UAAU,EAAE,EAAE;gBACd,WAAW,EAAE,MAAM;aACtB,CACJ,CAAC;QAEN,IAAI,CAAC,oBAAoB;YACrB,IAAI,KAAK,CAAC,GAAG,CACT;gBACI,CAAC,EAAE,IAAI,CAAC,IAAI;gBACZ,CAAC,EAAE,IAAI,CAAC,IAAI;gBACZ,WAAW,EAAE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,eAAe;gBAC9D,WAAW,EAAE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,eAAe;gBAC9D,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,SAAS;gBACf,QAAQ,EAAE,GAAG;aAChB,CACJ,CAAC;QAEN,IAAI,CAAC,aAAa;YACd,IAAI,KAAK,CAAC,GAAG,CACT;gBACI,CAAC,EAAE,IAAI,CAAC,IAAI;gBACZ,CAAC,EAAE,IAAI,CAAC,IAAI;gBACZ,WAAW,EAAE,IAAI,CAAC,qBAAqB;gBACvC,WAAW,EAAE,IAAI,CAAC,qBAAqB;gBACvC,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,SAAS;gBACf,aAAa,EAAE,IAAI;gBACnB,UAAU,EAAE,EAAE;gBACd,WAAW,EAAE,SAAS;aACzB,CACJ,CAAC;QAEN,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QAElC,IAAI,CAAC,SAAS;YACV,IAAI,KAAK,CAAC,KAAK,CACX;gBACI,SAAS,EAAE,UAAU,OAAO;oBAExB,IAAI,MAAM,GAAG,EAAE,CAAC;oBAChB,IAAI,UAAU,GAAG,EAAE,CAAC;oBACpB,IAAI,WAAW,GAAG,EAAE,CAAC;oBAErB,OAAO,CAAC,SAAS,EAAE,CAAC;oBACpB,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;oBAC1B,OAAO,CAAC,gBAAgB,CAAC,UAAU,GAAG,WAAW,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;oBACrE,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oBACzB,OAAO,CAAC,gBAAgB,CAAC,KAAK,GAAG,WAAW,EAAE,CAAC,EAAE,KAAK,GAAG,UAAU,EAAE,MAAM,CAAC,CAAC;oBAC7E,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;oBAC1B,OAAO,CAAC,SAAS,EAAE,CAAC;oBACpB,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAClC,CAAC;gBACD,IAAI,EAAE,MAAM;gBACZ,CAAC,EAAE,CAAC,EAAE;gBACN,CAAC,EAAE,IAAI,CAAC,IAAI;aACf,CACJ,CAAC;QAEN,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAEzC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAEpC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAClC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAEtC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAE/B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE3B,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAA;IAC/D,CAAC;IAED,0CAAoB,GAApB;QACI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;QACrC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,CAAC;IAC1D,CAAC;IAED,4CAAsB,GAAtB;QAAA,iBAUC;QATG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;QACzC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,IAAI,CAAC,CAAC;QAE1D,EAAE,CAAC,CAAC,IAAI,CAAC,4BAA4B,KAAK,IAAI,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,4BAA4B;gBAC7B,WAAW,CAAC;oBACR,KAAI,CAAC,wBAAwB,CAAC,KAAI,CAAC,aAAa,EAAE,EAAE,KAAK,CAAC,CAAC;gBAC/D,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACxC,CAAC;IACL,CAAC;IAED,oCAAc,GAAd;QAAA,iBAUC;QATG,EAAE,CAAC,CAAC,IAAI,CAAC,wBAAwB,KAAK,IAAI,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,wBAAwB;gBACzB,WAAW,CAAC;oBACR,EAAE,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,KAAI,CAAC,eAAe;wBAC3C,KAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;wBAC1B,KAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;oBACnC,CAAC;gBACL,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACpC,CAAC;IACL,CAAC;IAED,sCAAgB,GAAhB;QAAA,iBAUC;QATG,EAAE,CAAC,CAAC,IAAI,CAAC,0BAA0B,KAAK,IAAI,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,0BAA0B;gBAC3B,WAAW,CAAC;oBACR,EAAE,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,KAAI,CAAC,iBAAiB;wBAC7C,KAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;wBAC5B,KAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;oBACrC,CAAC;gBACL,CAAC,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACtC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,4CAAsB,GAAtB,UAAuB,KAAK;QACxB,IAAI,CAAC,eAAe,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAE5C,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE1B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAExB,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;YACd,OAAO,GAAG,CAAC,CAAC;QAChB,CAAC;QAED,IAAI,KAAK,GACL,IAAI,KAAK,CAAC,KAAK,CACX;YACI,IAAI,EAAE,IAAI,CAAC,WAAW;YACtB,QAAQ,EAAE,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC;YACjD,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,SAAS;YAC/B,QAAQ,EAAE,GAAG;YACb,OAAO,EAAE,OAAO;SACnB,CACJ,CAAC;QAEN,KAAK,CAAC,IAAI,EAAE,CAAC;QAEb,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,SAAS;YACtC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,YAAY,GAAG,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;IACtG,CAAC;IAED,8CAAwB,GAAxB,UAAyB,OAAO;QAC5B,IAAI,CAAC,iBAAiB,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAE9C,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAE9B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC5B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAE5B,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;YAChB,OAAO,GAAG,CAAC,CAAC;QAChB,CAAC;QAED,IAAI,KAAK,GACL,IAAI,KAAK,CAAC,KAAK,CACX;YACI,IAAI,EAAE,IAAI,CAAC,aAAa;YACxB,QAAQ,EAAE,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC;YACrD,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,SAAS;YAC/B,QAAQ,EAAE,GAAG;YACb,OAAO,EAAE,OAAO;SACnB,CACJ,CAAC;QAEN,KAAK,CAAC,IAAI,EAAE,CAAC;QAEb,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,SAAS;YACxC,OAAO,GAAG,KAAK,GAAG,IAAI,CAAC,cAAc,GAAG,MAAM,GAAG,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;IAC9G,CAAC;IAED,4CAAsB,GAAtB,UAAuB,KAAK,EAAE,OAAe;QAAf,uBAAe,GAAf,eAAe;QACzC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE1B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAExB,IAAI,QAAQ,GAAG,GAAG,CAAC;QACnB,EAAE,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;YACnB,QAAQ,GAAG,CAAC,CAAC;QACjB,CAAC;QAED,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;YACd,QAAQ,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;QAC7D,CAAC;QAED,IAAI,KAAK,GACL,IAAI,KAAK,CAAC,KAAK,CACX;YACI,IAAI,EAAE,IAAI,CAAC,eAAe;YAC1B,QAAQ,EAAE,QAAQ;YAClB,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,SAAS;YAC/B,QAAQ,EAAE,QAAQ;SACrB,CACJ,CAAC;QAEN,KAAK,CAAC,IAAI,EAAE,CAAC;IACjB,CAAC;IAED,8CAAwB,GAAxB,UAAyB,OAAO,EAAE,OAAe;QAAf,uBAAe,GAAf,eAAe;QAC7C,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAE9B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAE5B,IAAI,QAAQ,GAAG,GAAG,CAAC;QACnB,EAAE,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;YACnB,QAAQ,GAAG,CAAC,CAAC;QACjB,CAAC;QAED,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;YAChB,QAAQ,GAAG,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC;QACjE,CAAC;QAED,IAAI,KAAK,GACL,IAAI,KAAK,CAAC,KAAK,CACX;YACI,IAAI,EAAE,IAAI,CAAC,iBAAiB;YAC5B,QAAQ,EAAE,QAAQ;YAClB,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,SAAS;YAC/B,QAAQ,EAAE,QAAQ;SACrB,CACJ,CAAC;QAEN,KAAK,CAAC,IAAI,EAAE,CAAC;IACjB,CAAC;IAED,iDAA2B,GAA3B,UAA4B,KAAK;QAC7B,IAAI,MAAM,GAAG,CACT,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,KAAK,CAAC;QAExC,MAAM,CAAC,CACH,GAAG,GAAG,GAAG,CAAC,GAAG,MAAM,CAAC;IAC5B,CAAC;IAED,mDAA6B,GAA7B,UAA8B,OAAO;QACjC,IAAI,MAAM,GAAG,CACT,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,OAAO,CAAC;QAE5C,MAAM,CAAC,CACH,GAAG,GAAG,GAAG,CAAC,GAAG,MAAM,CAAC;IAC5B,CAAC;IAED,iCAAW,GAAX,UAAY,KAAK;QACb,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC9B,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,KAAK;gBACD,CACI,CACI,IAAI,CAAC,YAAY,GAAG,CACpB,IAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,sBAAsB,CAAC;YAErF,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAE1B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YACtD,CAAC;QACL,CAAC;IACL,CAAC;IAED,mCAAa,GAAb,UAAc,OAAO;QACjB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,KAAK,IAAI,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAClC,CAAC;QAED,EAAE,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;YACd,OAAO;gBACH,CACI,CACI,IAAI,CAAC,cAAc,GAAG,CACtB,IAAI,CAAC,wBAAwB,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAE3F,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAE9B,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,KAAK,OAAO,CAAC,CAAC,CAAC;gBAClC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;gBAC9B,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YAC1D,CAAC;QACL,CAAC;IACL,CAAC;IAED,iCAAW,GAAX;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,KAAK,IAAI,CAAC,CAAC,CAAC;YACtC,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YAEjD,EAAE,CAAC,CAAC,OAAM,CACF,KAAK,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC9B,CAAC;QACL,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED,mCAAa,GAAb;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,KAAK,IAAI,CAAC,CAAC,CAAC;YACtC,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;YAEnD,EAAE,CAAC,CAAC,OAAM,CACF,KAAK,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAChC,CAAC;QACL,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;IAC/B,CAAC;IAED,iCAAW,GAAX,UAAY,KAAK;QACb,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAClC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC;YAExG,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,eAAe,IAAI,CAAC,CAAC;YAC9B,CAAC;YAED,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC1C,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QAC5D,CAAC;IACL,CAAC;IAED,iCAAW,GAAX;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,KAAK,IAAI,CAAC,CAAC,CAAC;YACtC,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAE7C,EAAE,CAAC,CAAC,OAAM,CACF,KAAK,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC1B,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED,mCAAa,GAAb,UAAc,OAAO;QACjB,EAAE,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACtC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,uBAAuB,CAAC,GAAG,IAAI,CAAC,uBAAuB,CAAC;YAElH,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBAC7C,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,uBAAuB,CAAC;YAC3D,CAAC;YAED,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAC9C,IAAI,CAAC,SAAS,CAAC,mBAAmB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAChE,CAAC;IACL,CAAC;IAED,mCAAa,GAAb;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,KAAK,IAAI,CAAC,CAAC,CAAC;YACtC,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YAE/C,EAAE,CAAC,CAAC,OAAM,CACF,KAAK,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC5B,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAC3C,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED,2BAAK,GAAL,UAAM,KAAK;QACP,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;IACvC,CAAC;IAED,+BAAS,GAAT,UAAU,GAAG,EAAE,KAAK;QAChB,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,KAAK,IAAI,CAAC,CAAC,CAAC;YACtC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACrC,CAAC;IACL,CAAC;IACL,kBAAC;AAAD,CAxiBA,AAwiBC,IAAA;AAxiBD;gCAwiBC,CAAA;;;AC/iBD,4BAAwB,eAExB,CAAC,CAFsC;AAIvC,IAAI,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;AAE/C,IAAI,GAAG,GAAG,IAAI,wBAAW,CAAC,WAAW,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;AAE9E,GAAG,CAAC,QAAQ,EAAE,CAAC;AAEf,GAAG,CAAC,oBAAoB,EAAE,CAAC;AAC3B,GAAG,CAAC,sBAAsB,EAAE,CAAC;AAE7B,GAAG,CAAC,cAAc,EAAE,CAAC;AACrB,GAAG,CAAC,gBAAgB,EAAE,CAAC;AAEvB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAC5B,UAAU,KAAK;IACX,GAAG,CAAC,sBAAsB,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;AAC5C,CAAC,CACJ,CAAC;AAEF,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CACnC,UAAU,KAAK;IACX,GAAG,CAAC,sBAAsB,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;AAC5C,CAAC,CACJ,CAAC;AAEF,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,SAAS,CAC1C,UAAU,KAAK;IACX,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC,CAAC;AAC/C,CAAC,CACJ,CAAC;AAEF,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAC9B,UAAU,KAAK;IACX,GAAG,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;AACxC,CAAC,CACJ,CAAC","file":"main.min.js","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","//import * as Konva from 'konva';\n\ndeclare let Konva: any;\n\n/**\n *\n */\nexport default class BkDashboard {\n\n    private version: string = '0.0.6';\n\n    private localStorageAvailable: boolean = false;\n\n    private stageWidth: number;\n    private stageHeight: number;\n    private stageContainer;\n\n    private arcX: number = 0;\n    private arcY: number = 0;\n    private acrToBackground: number = 5;\n\n    private maxSpeed: number = 0;\n    private maxSpeedCeiling: number = 20;\n    private maxSpeedCeilingBufer: number = 5;\n    private averageSpeed: number = 0;\n    private averageSpeedMultiplier: number = 10;\n    private checkSpeedInterval: number = 1000;\n    private checkSpeedIntervalObject;\n    private lastSpeedUpdate: number = 0;\n\n    private speedArcWidth: number;\n    private speedArcInnerRadius: number;\n    private speedArcOuterRadius: number;\n\n    private maxCadence: number = 0;\n    private maxCadenceCeiling: number = 50;\n    private maxCadenceCeilingBuffer: number = 10;\n    private averageCadence: number = 0;\n    private averageCadenceMultiplier: number = 100;\n    private averageCadenceInterval: number = 1000;\n    private averageCadenceIntervalObject = null;\n    private lastCadenceUpdate: number = 0;\n\n    private checkCadenceInterval: number = 1000;\n    private checkCadenceIntervalObject = null;\n\n    private cadenceArcInnerRadius: number;\n    private cadenceArcOuterRadius: number;\n\n    private stage;\n    private layer;\n    private mask;\n\n    private speedArcBackground;\n    private curSpeedArc;\n    private averageSpeedArc;\n    private averageCadenceArc;\n    private cadenceArcBackground;\n    private curCadenceArc;\n    private bottomBar;\n\n    /**\n     *\n     */\n    constructor(stageContainer, stageWidth, stageHeight) {\n        // let view = new View();\n\n        this.localStorageAvailable =\n            (\n                typeof(\n                    Storage) !== 'undefined');\n\n        this.stageWidth = stageWidth;\n        this.stageHeight = stageHeight;\n        this.stageContainer = stageContainer;\n\n        this.speedArcWidth = this.stageWidth / 20;\n        this.speedArcInnerRadius = this.stageWidth / 2.5;\n        this.speedArcOuterRadius = this.speedArcInnerRadius - this.speedArcWidth;\n\n        this.cadenceArcInnerRadius = this.speedArcInnerRadius - 55;\n        this.cadenceArcOuterRadius = this.speedArcOuterRadius - 25;\n    }\n\n    /**\n     *\n     */\n    initView() {\n        this.stage =\n            new Konva.Stage(\n                {\n                    container: this.stageContainer,\n                    width: this.stageWidth,\n                    height: this.stageHeight\n                }\n            );\n\n        this.arcX = this.stageWidth / 2;\n        this.arcY = this.stageHeight - this.stageHeight * 0.1;\n\n        this.layer = new Konva.Layer();\n\n        this.mask =\n            new Konva.Group(\n                {\n                    /*\n                     clip: {\n                         x: 0,\n                         y: 0,\n                         width: this.stageWidth,\n                         height: this.arcY\n                     }\n                     */\n                }\n            );\n\n        this.speedArcBackground =\n            new Konva.Arc(\n                {\n                    x: this.arcX,\n                    y: this.arcY,\n                    innerRadius: this.speedArcInnerRadius + this.acrToBackground,\n                    outerRadius: this.speedArcOuterRadius - this.acrToBackground,\n                    angle: 180,\n                    fill: '#444353',\n                    rotation: 180\n                }\n            );\n\n        this.curSpeedArc =\n            new Konva.Arc(\n                {\n                    x: this.arcX,\n                    y: this.arcY,\n                    innerRadius: this.speedArcInnerRadius,\n                    outerRadius: this.speedArcOuterRadius,\n                    angle: 180,\n                    fill: '#00C8E6',\n                    shadowEnabled: true,\n                    shadowBlur: 10,\n                    shadowColor: '#00C8E6'\n                }\n            );\n\n        this.averageSpeedArc =\n            new Konva.Arc(\n                {\n                    x: this.arcX,\n                    y: this.arcY,\n                    innerRadius: this.speedArcInnerRadius + this.acrToBackground + 10,\n                    outerRadius: this.speedArcOuterRadius - this.acrToBackground,\n                    angle: 2,\n                    opacity: 0.9,\n                    fill: '#FFF',\n                    shadowEnabled: true,\n                    shadowBlur: 10,\n                    shadowColor: '#FFF'\n                }\n            );\n\n        this.averageCadenceArc =\n            new Konva.Arc(\n                {\n                    x: this.arcX,\n                    y: this.arcY,\n                    innerRadius: this.cadenceArcInnerRadius + this.acrToBackground,\n                    outerRadius: this.cadenceArcOuterRadius - this.acrToBackground,\n                    angle: 2,\n                    opacity: 0.9,\n                    fill: '#FFF',\n                    shadowEnabled: true,\n                    shadowBlur: 10,\n                    shadowColor: '#FFF'\n                }\n            );\n\n        this.cadenceArcBackground =\n            new Konva.Arc(\n                {\n                    x: this.arcX,\n                    y: this.arcY,\n                    innerRadius: this.cadenceArcInnerRadius + this.acrToBackground,\n                    outerRadius: this.cadenceArcOuterRadius - this.acrToBackground,\n                    angle: 180,\n                    fill: '#444353',\n                    rotation: 180\n                }\n            );\n\n        this.curCadenceArc =\n            new Konva.Arc(\n                {\n                    x: this.arcX,\n                    y: this.arcY,\n                    innerRadius: this.cadenceArcInnerRadius,\n                    outerRadius: this.cadenceArcOuterRadius,\n                    angle: 180,\n                    fill: '#00C8E6',\n                    shadowEnabled: true,\n                    shadowBlur: 10,\n                    shadowColor: '#00C8E6'\n                }\n            );\n\n        let width = this.stageWidth / 1.1;\n\n        this.bottomBar =\n            new Konva.Shape(\n                {\n                    sceneFunc: function (context) {\n\n                        let height = 70;\n                        let curveWidth = 80;\n                        let curveRadius = 30;\n\n                        context.beginPath();\n                        context.moveTo(0, height);\n                        context.quadraticCurveTo(curveWidth - curveRadius, 0, curveWidth, 0);\n                        context.lineTo(width, 0);\n                        context.quadraticCurveTo(width + curveRadius, 0, width + curveWidth, height);\n                        context.lineTo(0, height);\n                        context.closePath();\n                        context.fillStrokeShape(this);\n                    },\n                    fill: '#FFF',\n                    x: -12,\n                    y: this.arcY,\n                }\n            );\n\n        this.mask.add(this.speedArcBackground);\n        this.mask.add(this.cadenceArcBackground);\n\n        this.mask.add(this.curSpeedArc);\n        this.mask.add(this.averageSpeedArc);\n\n        this.mask.add(this.curCadenceArc);\n        this.mask.add(this.averageCadenceArc);\n\n        this.layer.add(this.mask);\n        this.layer.add(this.bottomBar);\n\n        this.stage.add(this.layer);\n\n        document.getElementById(\"version\").innerHTML = this.version\n    }\n\n    initAverageSpeedView() {\n        this.setMaxSpeed(this.getMaxSpeed());\n        this.updateAverageSpeedView(this.getAvrSpeed(), true);\n    }\n\n    initAverageCadenceView() {\n        this.setMaxCadence(this.getMaxCadence());\n        this.updateAverageCadenceView(this.getAvrCadence(), true);\n\n        if (this.averageCadenceIntervalObject === null) {\n            this.averageCadenceIntervalObject =\n                setInterval(() => {\n                    this.updateAverageCadenceView(this.getAvrCadence(), false);\n                }, this.averageCadenceInterval);\n        }\n    }\n\n    initSpeedCheck() {\n        if (this.checkSpeedIntervalObject === null) {\n            this.checkSpeedIntervalObject =\n                setInterval(() => {\n                    if (new Date().getTime() - this.lastSpeedUpdate >\n                        this.checkSpeedInterval) {\n                        this.updateCurrentSpeedView(0);\n                    }\n                }, this.checkSpeedInterval);\n        }\n    }\n\n    initCadenceCheck() {\n        if (this.checkCadenceIntervalObject === null) {\n            this.checkCadenceIntervalObject =\n                setInterval(() => {\n                    if (new Date().getTime() - this.lastCadenceUpdate >\n                        this.checkCadenceInterval) {\n                        this.updateCurrentCadenceView(0);\n                    }\n                }, this.checkCadenceInterval);\n        }\n    }\n\n    /**\n     * @param  speed\n     */\n    updateCurrentSpeedView(speed) {\n        this.lastSpeedUpdate = new Date().getTime();\n\n        speed = this.round(speed);\n\n        this.setMaxSpeed(speed);\n\n        let opacity = 1;\n        if (speed === 0) {\n            opacity = 0;\n        }\n\n        let tween =\n            new Konva.Tween(\n                {\n                    node: this.curSpeedArc,\n                    rotation: this.calculateSpeedBasedRotation(speed),\n                    easing: Konva.Easings.EaseInOut,\n                    duration: 0.5,\n                    opacity: opacity\n                }\n            );\n\n        tween.play();\n\n        document.getElementById(\"speed\").innerHTML =\n            speed + ' > ' + this.averageSpeed + ' - (' + this.maxSpeed + '/' + this.maxSpeedCeiling + ')';\n    }\n\n    updateCurrentCadenceView(cadence) {\n        this.lastCadenceUpdate = new Date().getTime();\n\n        cadence = this.round(cadence);\n\n        this.setMaxCadence(cadence);\n        this.setAvrCadence(cadence);\n\n        let opacity = 1;\n        if (cadence === 0) {\n            opacity = 0;\n        }\n\n        let tween =\n            new Konva.Tween(\n                {\n                    node: this.curCadenceArc,\n                    rotation: this.calculateCadenceBasedRotation(cadence),\n                    easing: Konva.Easings.EaseInOut,\n                    duration: 0.5,\n                    opacity: opacity\n                }\n            );\n\n        tween.play();\n\n        document.getElementById(\"cadence\").innerHTML =\n            cadence + ' > ' + this.averageCadence + ' - (' + this.maxCadence + '/' + this.maxCadenceCeiling + ')';\n    }\n\n    updateAverageSpeedView(speed, initial = false) {\n        speed = this.round(speed);\n\n        this.setAvrSpeed(speed);\n\n        let duration = 0.5;\n        if (initial === true) {\n            duration = 5;\n        }\n\n        let rotation = 0;\n        if (speed !== 0) {\n            rotation = this.calculateSpeedBasedRotation(speed) + 180;\n        }\n\n        let tween =\n            new Konva.Tween(\n                {\n                    node: this.averageSpeedArc,\n                    rotation: rotation,\n                    easing: Konva.Easings.EaseInOut,\n                    duration: duration,\n                }\n            );\n\n        tween.play();\n    }\n\n    updateAverageCadenceView(cadence, initial = false) {\n        cadence = this.round(cadence);\n\n        this.setAvrCadence(cadence);\n\n        let duration = 0.5;\n        if (initial === true) {\n            duration = 5;\n        }\n\n        let rotation = 0;\n        if (cadence !== 0) {\n            rotation = this.calculateCadenceBasedRotation(cadence) + 180;\n        }\n\n        let tween =\n            new Konva.Tween(\n                {\n                    node: this.averageCadenceArc,\n                    rotation: rotation,\n                    easing: Konva.Easings.EaseInOut,\n                    duration: duration,\n                }\n            );\n\n        tween.play();\n    }\n\n    calculateSpeedBasedRotation(speed) {\n        let factor = (\n            100 / this.maxSpeedCeiling) * speed;\n\n        return (\n            180 / 100) * factor;\n    }\n\n    calculateCadenceBasedRotation(cadence) {\n        let factor = (\n            100 / this.maxCadenceCeiling) * cadence;\n\n        return (\n            180 / 100) * factor;\n    }\n\n    setAvrSpeed(speed) {\n        if (this.averageSpeed === null) {\n            this.averageSpeed = speed;\n        }\n\n        if (speed > 0) {\n            speed =\n                (\n                    (\n                        this.averageSpeed * (\n                        this.averageSpeedMultiplier - 1)) + speed) / this.averageSpeedMultiplier;\n\n            speed = this.round(speed);\n\n            if (this.averageSpeed !== speed) {\n                this.averageSpeed = speed;\n                this.storeItem('averageSpeed', this.averageSpeed);\n            }\n        }\n    }\n\n    setAvrCadence(cadence) {\n        if (this.averageCadence === null) {\n            this.averageCadence = cadence;\n        }\n\n        if (cadence > 0) {\n            cadence =\n                (\n                    (\n                        this.averageCadence * (\n                        this.averageCadenceMultiplier - 1)) + cadence) / this.averageCadenceMultiplier;\n\n            cadence = this.round(cadence);\n\n            if (this.averageCadence !== cadence) {\n                this.averageCadence = cadence;\n                this.storeItem('averageCadence', this.averageCadence);\n            }\n        }\n    }\n\n    getAvrSpeed() {\n        if (this.localStorageAvailable === true) {\n            let value = localStorage.getItem('averageSpeed');\n\n            if (typeof(\n                    value) !== 'undefined') {\n                this.averageSpeed = value;\n            }\n        }\n\n        return this.averageSpeed;\n    }\n\n    getAvrCadence() {\n        if (this.localStorageAvailable === true) {\n            let value = localStorage.getItem('averageCadence');\n\n            if (typeof(\n                    value) !== 'undefined') {\n                this.averageCadence = value;\n            }\n        }\n\n        return this.averageCadence;\n    }\n\n    setMaxSpeed(speed) {\n        if (speed > this.maxSpeedCeiling) {\n            this.maxSpeed = this.round(speed);\n            this.maxSpeedCeiling = Math.ceil(this.maxSpeed / this.maxSpeedCeilingBufer) * this.maxSpeedCeilingBufer;\n\n            if (this.maxSpeed === this.maxSpeedCeiling) {\n                this.maxSpeedCeiling += 5;\n            }\n\n            this.storeItem('maxSpeed', this.maxSpeed);\n            this.storeItem('maxSpeedCeiling', this.maxSpeedCeiling);\n        }\n    }\n\n    getMaxSpeed() {\n        if (this.localStorageAvailable === true) {\n            let value = localStorage.getItem('maxSpeed');\n\n            if (typeof(\n                    value) !== 'undefined') {\n                this.maxSpeed = value;\n            }\n        }\n        else {\n            this.maxSpeed = this.getAvrSpeed();\n        }\n\n        return this.maxSpeed;\n    }\n\n    setMaxCadence(cadence) {\n        if (cadence > this.maxCadenceCeiling) {\n            this.maxCadence = this.round(cadence);\n            this.maxCadenceCeiling = Math.ceil(this.maxCadence / this.maxCadenceCeilingBuffer) * this.maxCadenceCeilingBuffer;\n\n            if (this.maxCadence === this.maxCadenceCeiling) {\n                this.maxCadenceCeiling += this.maxCadenceCeilingBuffer;\n            }\n\n            this.storeItem('maxCadence', this.maxCadence);\n            this.storeItem('maxCadenceCeiling', this.maxCadenceCeiling);\n        }\n    }\n\n    getMaxCadence() {\n        if (this.localStorageAvailable === true) {\n            let value = localStorage.getItem('maxCadence');\n\n            if (typeof(\n                    value) !== 'undefined') {\n                this.maxCadence = value;\n            }\n        }\n        else {\n            this.maxCadence = this.getAvrCadence();\n        }\n\n        return this.maxCadence;\n    }\n\n    round(value) {\n        return Math.round(value * 10) / 10;\n    }\n\n    storeItem(key, value) {\n        if (this.localStorageAvailable === true) {\n            localStorage.setItem(key, value);\n        }\n    }\n}\n","import BkDashboard from './bkDashboard'\n\ndeclare let COBI: any;\n\nCOBI.init('token — can by anything right now');\n\nlet BkD = new BkDashboard('container', window.innerWidth, window.innerHeight);\n\nBkD.initView();\n\nBkD.initAverageSpeedView();\nBkD.initAverageCadenceView();\n\nBkD.initSpeedCheck();\nBkD.initCadenceCheck();\n\nCOBI.rideService.speed.subscribe(\n    function (value) {\n        BkD.updateCurrentSpeedView(value * 3.6);\n    }\n);\n\nCOBI.tourService.averageSpeed.subscribe(\n    function (value) {\n        BkD.updateAverageSpeedView(value * 3.6);\n    }\n);\n\nCOBI.rideService.cadenceAvailability.subscribe(\n    function (value) {\n        console.log('cadence available: ' + value);\n    }\n);\n\nCOBI.rideService.cadence.subscribe(\n    function (value) {\n        BkD.updateCurrentCadenceView(value);\n    }\n);\n"]}